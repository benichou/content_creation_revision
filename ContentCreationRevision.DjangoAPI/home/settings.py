"""
Django settings for home project.

Generated by 'django-admin startproject' using Django 4.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

import os
import json



# Get the directory of the current file
current_dir = os.path.dirname(__file__)

# Move up one level to the DjangoAPI directory
parent_dir = os.path.dirname(current_dir)

# Join the parent directory with config.json
config_path = os.path.join(parent_dir, 'config.json')

# Load configuration from config.json
with open(config_path, 'r') as config_file:
    config = json.load(config_file)


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config['django_secret_key']


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config["app_debug"]

#Manage Identity URL
COGNITIVE_SERVICES_URL = config["cognitive_services_url"]
# All credentials for azure openai
TEXT_MODEL_GPT3_5      = config["text_model_gpt3_5"] ## DEPRECATED
TEXT_MODEL_GPT4_8K     = config["text_model_gpt4_8k"] ## DEPRECATED
TEXT_MODEL_GPT4_32K    = config["text_model_gpt4_32k"] ## DEPRECATED
## THE ABOVE WILL BE DELETED AFTER WE AGREE ON HAVING A MORE FLEXIBLE MODEL SELECTION

MODEL_DICTIONARY = {"TEXT_MODEL_GPT3_5"                     : config["text_model_gpt3_5"],
                    "TEXT_MODEL_GPT4_8K"                    : config["text_model_gpt4_8k"],
                    "TEXT_MODEL_GPT4_32K"                   : config["text_model_gpt4_32k"],
                    "MULTIMODAL_MODEL_GPT4O_128K"           : config["multimodal_model_gpt4o"],
                    "MULTIMODAL_MODEL_GPT4O_128K_DVOICE"    : config["multimodal_model_dvoice_gpt4o"]}

MODEL_NAME_DICTIONARY = {"TEXT_MODEL_GPT3_5"                     : config["text_model_gpt3_5_name"],
                         "TEXT_MODEL_GPT4_8K"                    : config["text_model_gpt4_8k_name"],
                         "TEXT_MODEL_GPT4_32K"                   : config["text_model_gpt4_32k_name"],
                         "MULTIMODAL_MODEL_GPT4O_128K"           : config["multimodal_model_gpt4o_name"],
                         "MULTIMODAL_MODEL_GPT4O_128K_DVOICE"    : config["multimodal_model_gpt4o_name"],
                         }

COUNT_ENCODING_BASE_DICTIONARY = {"TEXT_MODEL_GPT3_5"                     : config["gpt35_tiktoken_encoding"],
                                  "TEXT_MODEL_GPT4_8K"                    : config["gpt4_tiktoken_encoding"],
                                  "TEXT_MODEL_GPT4_32K"                   : config["gpt4_tiktoken_encoding"],
                                  "MULTIMODAL_MODEL_GPT4O_128K"           : config["gpt4o_tiktoken_encoding"],
                                  "MULTIMODAL_MODEL_GPT4O_128K_DVOICE"    : config["gpt4o_tiktoken_encoding"],
                                  }
API_VERSION_MODEL_DICTIONARY = {"TEXT_MODEL_GPT3_5"                     : "2024-02-01",
                                "TEXT_MODEL_GPT4_8K"                    : "2024-02-01",
                                "TEXT_MODEL_GPT4_32K"                   : "2024-02-01",
                                "MULTIMODAL_MODEL_GPT4O_128K"           : "2024-10-21", ## version supports structured output
                                "MULTIMODAL_MODEL_GPT4O_128K_DVOICE"    : "2024-10-21", ## supports structured output
                                }
EMBEDDING_DEPLOYMENT_NAME = config["embedding_deploymment"]
EMBEDDING_DEPLOYMENT_API_VERSION_DICTIONARY = {'DTEMBADA2': '2023-05-15',
                                               'TEXTEMBEDDINGSMALL': '2023-05-15'
                                               }         

API_BASE               = config["api_base"]
API_VERSION            = "2024-02-01"
API_VERSION_DVOICE     = "2024-08-01-preview"
# Model settings
MAX_COMPLETION_LEN     = 1_000 ## WILL BE DEPRECATED ONCE WE REMOVE THE DIFFERENT SHADES OF GET GPT COMPLETION IN MODELS.PY
######## THE ABOVE WILL BE DELETED AFTER WE AGREE ON HAVING A MORE FLEXIBLE MODEL SELECTION
### NEED TO CREATE A DICTIONARY TO DECIDE ON MAX COMPLETION FOR EACH MODEL
MODEL_MAX_OUTPUT_SIZE = {"TEXT_MODEL_GPT3_5"                     : 4_000,
                         "TEXT_MODEL_GPT4_8K"                    : 8_000,
                         "TEXT_MODEL_GPT4_32K"                   : 28_000,
                         "MULTIMODAL_MODEL_GPT4O_128K"           : 4000,
                         "MULTIMODAL_MODEL_GPT4O_128K_DVOICE"    : 4000
                         
                        }
### NEED TO CREATE A DICTIONARY TO DECIDE ON CONTEXT WINDOW SIZE UPPER LIMIT FOR EACH ASSOCIATED MODEL
MODEL_CONTEXT_WINDOW_SIZE = {"TEXT_MODEL_GPT3_5"                    : 16_000,
                            "TEXT_MODEL_GPT4_8K"                    : 8_000,
                            "TEXT_MODEL_GPT4_32K"                   : 32_000,
                            "MULTIMODAL_MODEL_GPT4O_128K"           : 128_000, 
                            "MULTIMODAL_MODEL_GPT4O_128K_DVOICE"    : 128_000
                            }
CONTEXT_WINDOW_SIZE_CUTOFF = 0.25 # DETERMINE THE UPPER LIMIT TO RAG INGESTION OF CHUNKS 
MODEL_TEMPERATURE_BY_TASK = {"QA": 0,
                             "SUMMARIZATION": 0.5
                            }

SEPARATOR              = "\n*"
NO_DOCS_FLAG           = "NODOCUMENTS"

# Form Recognizer credentials and settings
ENDPOINT = config["endpoint_ocr"]
FORMRECOGNIZER_API_VERSION = "2023-07-31"  

#credentials Host
REDIS_LOCAL      = config["redis_local"] 
REDIS_LOCAL_URL  = '127.0.0.1'
REDIS_PORT       = config["redis_port"]
REDIS_HOST_NAME  = config["redis_host_name"]
REDIS_SECRET_KEY = config["redis_secret_key"]

#Chuncking settings for AI Search
CHUNK_SIZE    = config['chunk_size']
CHUNK_OVERLAP = config['chunk_overlap']
K_DOCS        = config['k_documents']
SEARCH_TYPE   = config['search_type']
#Azure Search
AZ_AI_SEARCH_NAME       = config["az_ai_search_name"]
AZ_AI_SEARCH_ENDPOINT   = f"https://{AZ_AI_SEARCH_NAME}.search.windows.net/"
AZ_AI_SEARCH_INDEX_NAME = config["az_ai_index_name"]
VECTOR_STORE_TYPE       = "az ai search"
AI_SEARCH_THRESHOLD     = config["ai_search_threshold"]

#ChromaDB Collection Name
COLLECTION_NAME = "collection"

#Blob Storage API URLS
LIST_ALL_BLOBS_URL                              = config["list_all_blobs_url"]
DOWNLOAD_DOCUMENT_URL                           = config["download_document_url"]
DOWNLOAD_ONBOARDING_URL                         = config["download_onboarding_url"]
DVOICE_UPLOAD_DOCUMENT_URL                      = config["dvoice_upload_document_url"]
DVOICE_DOWNLOAD_DOCUMENT_URL                    = config["dvoice_download_document_url"]
DVOICE_UPDATE_INPROGRESS_THREAD_FLAG_URL        = config["dvoice_update_thread_flag_url"]


#Remove SSL certificate because dev doesnt have it. 
CERTIFICATE_VERIFY    = config["certificate_verify"]


# API BLOB STORAGE PARAMETERS
DVOICE_CONTAINER_NAME = "dynamiccontainer"
DVOICE_TRANSFORMERS_CONTAINER_NAME = "staticcontainer"
DVOICE_DOWNLOAD_FOLDER = "dvoice_input"
DVOICE_UPLOAD_FOLDER = "dvoice_output"
DVOICE_DOWNLOAD_TRANSFORMERS_FOLDER = "doclingtransformers"

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'api',
    'drf_spectacular',
]

ALLOWED_HOSTS = ['*']



MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',    
    'api.middleware.SetStrictTransportAndContenetSecurityMiddleware',
    'api.middleware.LogRequestsMiddleware',
    'api.middleware.DisableTraceTrackMiddleware'
]

ROOT_URLCONF = 'home.urls'

CORS_ALLOW_ALL_ORIGINS = True

CORS_ALLOWED_ORIGINS = [
    "https://caw2110299.ca.deloitte.com:44312",
    "http://localhost:3000", 
    
]


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'home.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE     = 'UTC'

USE_I18N      = True

USE_TZ        = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL          = '/static/'
STATIC_ROOT         = 'static'
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
STATIC_ROOT         = os.path.join(BASE_DIR, 'staticfiles')
# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


REST_FRAMEWORK = {
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'api.authentication.AzureADAuthentication',
    ),
}

SPECTACULAR_SETTINGS= {
    "TITLE":"Document Process API"
}

#authentication
AZURE_AD = {
    "TENANT_ID"    : config["tenant_id"],
    'CLIENT_ID'    : config["client_id"],
    'CLIENT_SECRET': config["client_secret"],
    'AUTHORITY'    : config["authority"],
    'SCOPE'        : config["scope"],
}
